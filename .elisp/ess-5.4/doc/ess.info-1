This is ess.info, produced by makeinfo version 4.2 from ess.texi.

ESS -- Emacs Speaks Statistics
******************************

INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* ESS: (ess). Emacs Speaks Statistics (S/S+/R, SAS, BUGS/JAGS, Stata, XLisp-Stat).
END-INFO-DIR-ENTRY


File: ess.info,  Node: Top,  Next: Introduction,  Prev: (dir),  Up: (dir)

ESS: Emacs Speaks Statistics
****************************

   ESS version

   5.4

     by  A.J. Rossini,
         R.M. Heiberger,
         K. Hornik,
         M. Maechler,
         R.A. Sparapani
     and S.J. Eglen.

     Emacs Speaks Statistics (ESS) provides an intelligent, consistent
     interface between the user and the software.  ESS interfaces with
     SAS, S-PLUS, R, BUGS/JAGS and other statistical analysis packages
     under the Unix, Microsoft Windows, and Apple Mac operating
     systems.  ESS is itself a package within the emacs text editor and
     uses emacs features to streamline the creation and use of
     statistical software.  ESS knows the syntax and grammar of
     statistical analysis packages and provides consistent display and
     editing features based on that knowledge.  ESS assists in
     interactive and batch execution of statements written in these
     statistical analysis languages.

* Menu:

* Introduction::                Overview of features provided by this package
* Installation::                Installing ESS on your system

* Interactive ESS::             Interacting with statistical programs
* Entering commands::           Interacting with the ESS process
* Transcript Mode::             Manipulating saved transcript files

* ESS for the S family::
* Editing::                     How to create/edit objects and functions
* Editing R documentation files::
* Help::                        Reading help files

* ESS for SAS::
* ESS for BUGS::
* ESS for JAGS::

* Miscellaneous::               Other features of ESS
* Mailing lists/bug reports::   How to get assistance with ESS
* Customization::               Customizing ESS

* Key Index::
* Concept Index::
* Variable and command index::


File: ess.info,  Node: Introduction,  Next: Installation,  Prev: Top,  Up: Top

Introduction to ESS
*******************

   The S family (S, Splus and R) and SAS statistical analysis packages
provide sophisticated statistical and graphical routines for
manipulating data.   Emacs Speaks Statistics (ESS) is based on the
merger of two pre-cursors, S-mode and SAS-mode, which provided support
for the S family and SAS respectively.  Later on, Stata-mode was also
incorporated.

   ESS provides a common, generic, and useful interface, through emacs,
to many statistical packages.  It currently supports the S family, SAS,
BUGS/JAGS, Stata and XLisp-Stat with the level of support roughly in
that order.

   A bit of notation before we begin.  _emacs_ refers to both _GNU
Emacs_ by the Free Software Foundation, as well as _XEmacs_ by the
XEmacs Project.  The emacs major mode `ESS[language]', where `language'
can take values such as `S', `SAS', or `XLS'.  The inferior process
interface (the connection between emacs and the running process)
referred to as inferior ESS (`iESS'), is denoted in the modeline by
`ESS[dialect]', where `dialect' can take values such as `S3', `S4',
`S+3', `S+4', `S+5', `S+6', `S+7', `R', `XLS', `VST', `SAS'.

   Currently, the documentation contains many references to ``S'' where
actually any supported (statistics) language is meant, i.e., `S' could
also mean `XLisp-Stat' or `SAS'.

   For exclusively interactive users of S, ESS provides a number of
features to make life easier.  There is an easy to use command history
mechanism, including a quick prefix-search history.  To reduce typing,
command-line completion is provided for all S objects and "hot keys"
are provided for common S function calls.  Help files are easily
accessible, and a paging mechanism is provided to view them.  Finally,
an incidental (but very useful) side-effect of ESS is that a transcript
of your session is kept for later saving or editing.

   No special knowledge of Emacs is necessary when using S
interactively under ESS.

   For those that use S in the typical edit-test-revise cycle when
programming S functions, ESS provides for editing of S functions in
Emacs edit buffers.  Unlike the typical use of S where the editor is
restarted every time an object is edited, ESS uses the current Emacs
session for editing.  In practical terms, this means that you can edit
more than one function at once, and that the ESS process is still
available for use while editing.  Error checking is performed on
functions loaded back into S, and a mechanism to jump directly to the
error is provided.  ESS also provides for maintaining text versions of
your S functions in specified source directories.

* Menu:

* Features::                    Why should I use ESS?
* New features::
* Credits::                     Authors of and contributors to ESS
* Latest version::              Getting the latest version of ESS
* Manual::                      How to read this manual


File: ess.info,  Node: Features,  Next: New features,  Prev: Introduction,  Up: Introduction

Why should I use ESS?
=====================

   Statistical packages are powerful software systems for manipulating
and analyzing data, but their user interfaces often leave something
something to be desired:  they offer weak editor functionality and they
differ among themselves so markedly that you have to re-learn how to do
those things for each package.  ESS is a package which is designed to
make editing and interacting with statistical packages more uniform,
user-friendly and give you the power of emacs as well.

   ESS provides several features which make it easier to interact with
the ESS process (a connection between your buffer and the statistical
package which is waiting for you to input commands).  These include:

   * Command-line editing for fixing mistakes in commands before they
     are entered.  The `-e' flag for S-plus provides something similar
     to this, but here you have the full range of Emacs commands rather
     than a limited subset.  However, other packages such as XLisp-Stat
     and S3 do not necessarily have features like this built-in.  *Note
     Command-line editing::.

   * Searchable command history for recalling previously-submitted
     commands.  This provides all the features of the `Splus -e' history
     mechanism, plus added features such as history searching.  *Note
     Command History::.

   * Command-line completion of both object and file names for quick
     entry.  This is similar to `tcsh''s facility for filenames; here it
     also applies to object names and list components.  *Note
     Completion::.

   * Hot-keys for quick entry of commonly-used commands in `S' such as
     `objects()' and `search()'.  *Note Hot keys::.

   * Transcript recording for a complete record of all the actions in an
     S session.  *Note Transcript::.

   * Interface to the help system, with a specialized mode for viewing S
     help files.  *Note Help::.


   If you commonly create or modify S functions, you will have found
the standard facilities for this (the `fix()' function, for example)
severely limiting.  Using S's standard features, one can only edit one
function at a time, and you can't continue to use S while editing.  ESS
corrects these problems by introducing the following features:

   * Object editing.  ESS allows you to edit more than one function
     simultaneously in dedicated Emacs buffers.  The ESS process may
     continue to be used while functions are being edited.  *Note Edit
     buffer::.

   * A specialized editing mode for S code, which provides syntactic
     indentation and highlighting.  *Note Indenting::.

   * Facilities for loading and error-checking source files, including a
     keystroke to jump straight to the position of an error in a source
     file.  *Note Error Checking::.

   * Source code revision maintenance, which allows you to keep historic
     versions of S source files.  *Note Source Files::.

   * Facilities for evaluating S code such as portions of source files,
     or line-by-line evaluation of files (useful for debugging).  *Note
     Evaluating code::.

   Finally, ESS provides features for re-submitting commands from saved
transcript files, including:

   * Evaluation of previously entered commands, stripping away
     unnecessary prompts.  *Note Transcript resubmit::.



File: ess.info,  Node: New features,  Next: Credits,  Prev: Features,  Up: Introduction

New features in ESS
===================

     Changes/New Features in 5.4:
        * ESS[SAS]: The long overdue change from `make-regexp' to
          `regexp-opt' for font-locking is complete.  The new
          `regexp-opt' is now the default since it is better than the
          old code in many ways (and especially more maintainable).
          However, there are certainly some special cases missed (bug
          reports and patches welcome!).  Setting
          `ess-sas-run-regexp-opt' to `nil' will result in the old code
          being used.

        * ESS[BUGS] and ESS[JAGS]: typing `=' now results in  `<-'.

        * ESS[R] function arguments "show" `(ess-r-args-show)' now
          uses the new `(tooltip-show-at-point)' contributed by Erik
          Iverson.

        * Toolbar icons now also work in (beta) Emacs 23.

        * ESS[S]: New function `ess-change-directory' for setting both
          emacs' current directory and the directory of an *R* or *S*
          buffer.

        * ESS[S] when transient-mark-mode is true, the mark is now kept,
          rather than deactivated, thanks to a patch from David
          Reitter.

     Changes/New Features in 5.3.11:
        * ESS[SAS]: work around bug in Emacs 22.2 & 22.3 which fails to
          set case-fold fontification automatically.

        * Rd mode: support new keyword 'Rdversion'

        * ESS[R]: now again works with Emacs 21.x

     Changes/New Features in 5.3.10:
        * Fixed noweb-mode bug accidentally introduced into 5.3.9

        * In noweb-mode, e.g., Rnw-mode, electric "<" also inserts
          closing "@".   Further, the code chunk boundaries are better
          kept up-to-date, such that  code[R] <-> text[LaTeX] minor
          mode switching should happen more reliably.

        * In noweb-mode, fix a buglet in rare [Enter] or [Tab]
          behavior; further,  by default disable the former `[[' ..
          `]]'  code-protection-when-filling  behavior which has been
          found to be buggy.

     Changes/New Features in 5.3.9:
        * ESS[SAS]: evince PDF viewer now supported as well; search
          order: evince, Xpdf, Adobe/Acrobat Reader

        * ESS[R]: added support for Roxygen, potentially to be extended.

        * ESS[S] (and R): inferior (`*R*') and transcript modes no
          longer fontify language keywords (such as `for', `in', etc).

        * iESS[Stata]: Customize the `ess-sta-delimiter-friendly'
          setting to `t' to convert embedded semi-colons to newlines
          for Stata processing.

        * Sweave fix for embedded blanks in PDF reader and PDF files

        * Several fixes for Major Mode Convention violations in
          `ess-mode' and `noweb-mode'.

        * ESS[JAGS]: `M-x comment-region' now available!

        * ESS[S] The `ess-swv-*' commands (and keybindings) are now in
          a submenu of the "Noweb" menu, when editing Sweave files.

     Changes/New Features in 5.3.8:
        * ESS[JAGS]: more separation from ESS[BUGS] (as much as is
          currently planned); now `C-c C-c' on an empty `.jmd' creates
          a template as it should; symbolic links are created for CODA
          output so BOA is happy: from `index.txt' to `.ind' and
          `chain#.txt' to `#.out'

        * ESS[SAS]: buffer-local `ess-sas-submit-command' and
          `ess-sas-submit-command-options' now recognized by
          `ess-sas-submit-region'

        * ESS[S]: When trying to evaluate code in an S language buffer
          and  there is no associated process, now start R
          automatically instead of  signalling an error.  Also, restart
          R if there is an associated process  which is not running.
          However, do not start R just via the "electric"  `('
          (`ess-r-args-auto-show').

        * ESS[S]: For (one-line) functions withOUT '{ .. }' bodys, the
          end  of function is now correctly found more often.  This
          notably improves  `C-c C-c'
          (`ess-eval-function-or-paragraph-and-step').

        * ESS[JAGS]: cleanup/re-organization of elisp code; symbolic
          links for CODA output are now only created by the new JAGS
          `system' command in version 1.0.3; specify whether this
          command is available via `ess-jags-system'; if not present,
          then no links are created so that the `*shell*' buffer does
          not become unresponsive during the batch run

     Changes/New Features in 5.3.7:
        * ESS: `ess-default-style' now *is* customizable, i.e.,
          changing its value in `~/.emacs' now does have the desired
          effect.

        * ESS: `ess-font-lock-mode' is a new variable (default: t)
          which controls whether font-locking is enabled in ESS buffers.

        * ESS[R]: for XEmacs on Windows; another tweak to find R
          versions

        * ESS[SAS]: font-locking updated for ODS and SAS Bayesian
          Procedures; a more consistent handling of SAS options by
          `ess-sas-submit-command-options' which is buffer-local;
          portable snooze for MS Windows via customize-able
          `ess-sleep-for' (floats welcome); Xpdf now supported as a PDF
          viewer

        * ESS[Rnw]: now also works with "emacs -nw" and Emacs 22.

        * ESS[JAGS]: now requires JAGS 1.0 (see the new ESS for JAGS
          help section for more information): both need work;
          suggestions welcome

        * ESS[R]: [TAB] completion now uses the R-internal completion
          mechanism (for R >= 2.5.0).

        * ESS[R], [S]: interpretation of "_" as assignment has been
          removed in `ess-continued-statement-p' for R and S.

        * several internal code cleanups.

        * ESS[R]: An experimental version of a new command `Rgui' on MS
          Windows to send lines directly from emacs to `Rgui' is
          available in file `lisp/essd-rgui.el'.  Preliminary
          documentation is in file `doc/rgui-doc.txt'.

     Changes/New Features in 5.3.6:
        * ESS: for XEmacs, using "gnuclient" (without a "-q") works for
          things like fix() after M-x gnuserv-start has been done.

        * ESS[R]: M-x R-newest should now work in more situations on MS
          Windows, e.g., when R has been installed in a non-default
          "ProgramFiles"  directory tree.  In these cases, there's no
          need to specify the name (and  full path) of the R program
          anymore.

        * ESS[R]: For XEmacs, startup (with new tooltip code) works
          again.

     Changes/New Features in 5.3.5:
        * ESS[R] a new defun is available, `M-x R-newest', which will
          start the newest version of R that it can find on your system.

        * ESS[R] add Sven Hartenstein's "R function arguments tips"
          functionality, via new file `../lisp/essd-r-args.el'.   Note
          that this includes an "electric "("" behavior inside `R-mode'
          which is _active by default_ and can be customized via
          `ess-r-args-electric-paren'; i.e., use `(setq
          ess-r-args-electric-paren nil)' to turn it off.  Further,
          `ess-r-args-show-as' allows to switch to the "tooltip" mode.

        * ESS: functions `ess-get-pdf-viewer' and *-ps-viewer; built on
          new  customizable variables `ess-pdf-viewer-pref' and
          `ess-ps-viewer-pref'; currently used in `ess-swv-PDF' and
          `*-PS'.

        * ESS[R] Improved `ess-swv-PDF' to run pdf viewer only if
          pdflatex was ok

        * ESS[R] Improved `ess-swv-weave' to start R automatically if
          none is running.

        * ESS: Do no longer ask _which_ ESS process to use if there  is
          only one.

     Changes/New Features in 5.3.4:
        * ESS[R] now better work with options(error=recover); and the
          new default of CHM help files on windows.

        * ESS[R] some more cleanup in the "sweave" functions

        * miscellaneous fixes

     Changes/New Features in 5.3.3:
        * ESS[S] fix buglet (5.3.2 only) which left command prompt in
          "execute buffer" and hence help files.

        * new customizable variable `ess-display-buffer-reuse-frames'
          set to true (which changes default behavior) such that
          execution or help *frames* are reused.

     Changes/New Features in 5.3.2:
        * Classic BUGS now supported by `(require 'essd-bugs)' with
          ESS[BUGS]       and JAGS by `(require 'essd-jags)' with
          ESS[JAGS].  But, only one       of them can be used at a time
          since they don't play nice together.  Also,       `C-c C-c'
          is now bound to the function `ess-bugs-next-action'
          (`F12' has been retired).  And finally, note that
          `essl-bug.el'       is deprecated and the replacement is
          `essl-bugs.el'.

        * ESS[R] Improved some of the "Sweave-make"  functions (yet
          scarcely documented) in `ess-swv.el'.

        * ESS[S] No longer mess with .Last.value (nor in other
          "languages").

     Changes/New Features in 5.3.1:
        * See the docs for 2 ways to install ESS for XEmacs
            1. by uncommenting the XEmacs part of             Section 1
               of `Makeconf' and performing `make install'

            2. by unpacking either             `ess-5.3.1.tgz' or
               `ess-5.3.1.zip' into
               `PREFIX/lib/xemacs/site-packages' on unix or
               `PREFIX\XEmacs\site-packages' on windows

        * ESS[R]: fixed bugs so that Rterm.exe can be found by XEmacs

        * ESS[S]: `ess-toggle-S-assign-key' is slightly changed; in
          particular, the default `ess-assign-key' is now `C-x ='.

        * ESS[R]: `M-x R-site-search' is a new (slightly experimental)
          utility similar to R's `RSiteSearch(..)' but with the
          advantage of  using Emacs' preferred browser, see
          `browse-url-browser-function'

     Changes/New Features in 5.3.0:
        * ESS[BUGS]: sanely re-format statistical output, `.bog', from
          scientific notation to numbers rounded with 4 decimal places
          with `M-x ess-bugs-sci-round-to-4-dp'.

        * The keys for navigating among section headings in help buffers
          worked, but only for one language per session; they should
          now work for multiple languages.  (They were also broken on
          Windows machines.)

        * ESS[S] long standing buglets in the internal logic for loading
          lisp code on Windows.  Particularly fixed behavior in help
          mode with S-plus GUI.

        * New variable, `ess-use-inferior-program-name-in-buffer-name',
          which enables using the executable name instead of the
          dialect name for R. Feature request.

        * ESS[S] `ess-execute-screen-options' now also works correctly
          when there is more than one window *side-by-side* in the same
          frame and runs in the correct buffer also when there is more
          than one S buffer.

        * iESS[S] new functions `ess-eval-paragraph-and-step' and
          `ess-eval-function-or-paragraph-and-step' are bound to keys
          `C-c C-p' and `C-c C-c' respectively and to the menu in
          ESS-mode; also bound in the help mode (for evaluating
          examples).

        * ESS[S] new function `ess-toggle-S-assign-key' allows to
          assign the " <- " insertion to an arbitrary key.


     Changes/New Features in 5.2.12:
        * ESS[SAS]: `M-;' fixed, but the XEmacs function `comment-dwim'
          may be broken, if so, use `M-x comment-region' and `M-x
          uncomment-region' instead; only valid PROCs are fontified
          which is very helpful finding syntax errors (currently
          supported: BASE, ETS, FSP, GRAPH, IML, INSIGHT and STAT); the
          "feature" where `F'-keys take you to an empty buffer when the
          requested destination is a file that does not exist has been
          fixed, now the request results in a no-op.  Further, sas-mode
          now also works in simple terminals.

        * Rterm/Cygwin combination works under Microsoft Windows.

        * ESS[R]: internal calls use baseenv() instead of NULL and
          define 'baseenv' where needed.

        * New experimental support for installing ESS.  See the file
          `lisp/ess-install.el'.

     Changes/New Features in 5.2.11:
        * ESS Info entry and `dir' handled more effectively for GNU
          Emacs users

        * ESS[SAS]: temporary files created for batch submission of a
          region are now named based on the current file; see
          `ess-sas-file-root' for details; all `lag' and `dif'
          functions now fontified correctly

        * iESS[SAS]: fixed a few nagging bugs, however, still does not
          appear to work at this time; please let us know if you have
          any ideas.

        * ESS[S]: Support for running other versions of Splus has been
          added for unix.  Two new variables, `ess-s-versions' and
          `ess-s-versions-list', are used to tell ESS what other
          versions of Splus you would like to run.

     Changes/New Features in 5.2.10:
        * ESS[R]: ess-r-versions can no longer be customized (since the
          customization was not taking effect unless customizations
          were loaded before ESS).  Its value has been changed so that
          it will also find R executables beginning "R-devel" and
          "R-patched".  If you wish to change this variable, it must be
          set in your `.emacs' before ESS is loaded.

        * Installation with GNU Make enhanced:  unix and unix-like
          operating systems will now be able to install ESS for all
          users in either a GNU Emacs site-lisp or an XEmacs package
          configuration by editing `lisp/ess-site.el' and `Makeconf'
          accordingly, then issuing `make install'

        * ESS[S]: Filename completion (inside strings) now also works in
          XEmacs for R and S-plus.

     Changes/New Features in 5.2.9:
        * ESS[R] for Windows:  the \ directory character bug with
          respect to ess-load-file has been eradicated.

        * iESS[SAS]: `C-c C-r' and `C-c C-b' once again work as
          intended and documented.

        * ESS[S]: M-x ess-fix-EQ-assign is a bit more agressive.

        * ESS[S]: Imenu now also shows setAs(), etc.

        * ESS[R]: R function pattern enhanced with underlying code such
          that  `M-C-a' (`ess-beginning-of-function') etc now work for
          many more  cases, including S4 method definitions.

        * iESS[R]: myOwnhelp(1) no longer wrongly triggers help(1).

        * ESS[R]: Improved detection of bogus help buffers: valid help
          buffers containing with the string "no documentation"(e.g.
          contour)  were being treated as bogus.

        * ESS[R]: In R help buffers, if
          `options("help.try.all.packages" =  TRUE)' then `?rlm' will
          list which packages rlm is defined in.  This help  buffer is
          not bogus, but instead is now relabelled "*help[R](rlm in
          packages)*".

        * ESS[STA]: add "//" as comment starting character to
          syntax-table.

     Changes/New Features in 5.2.8:
        * iESS: [Tab] completes *file* names "inside string" as in
          earlier (<= 5.2.3) ESS versions.

     Changes/New Features in 5.2.7:
        * If you use Custom to change the variable ess-toolbar-items,
          the new toolbar is used in all subsequent ESS buffers.

        * ESS[SAS]: new feature:  if ess-sas-log-max >0 and your .log
          grows to more than ess-sas-log-max bytes, just the first
          ess-sas-log-max bytes are refreshed; this is helpful when
          your .sas program generates lots of error messages and gets
          too big for emacs to display

        * ESS[R/S]: `M-;' in R/S editing modes will now indent with
          either one or two hashes depending on context.

        * ESS[R]: David Whiting's Sweave extensions (to 'noweb') are
          now available (from ess-swv.el loaded by default).

     Changes/New Features in 5.2.6:
        * Removed non-ASCII characters in a few files.

        * ESS[R]: now works better when UTF-8 locale is active; in
          particular, you get correct directional quotes in R's startup
          message  for R-devel (unstable development version of R
          2.1.0) when using  environment variables LANGUAGE=en@quot
          LC_ALL=en_US.UTF-8

        * ESS[SAS]: toggling of .log mode improved (`F10'); toggling of
          .lst mode now also available (`C-F10'); killing all buffers
          associated with .sas program no longer bound to `C-F10' since
          its a bit overzealous.

        * S-Plus 7 for Windows is now recognized.

        * ESS[S] (incl. R): in auto-fill mode, strings are not wrapped
          anymore.

        * ESS[S] (incl. R): font-lock now correctly differs between R
          and S, e.g., for "_"; both now fontify warning(.) and S does
          terminate() additionally.

        * Support for `bell' aka `beep' aka `ding' aka `alarm' in all
          inferior modes: When \a is output "to the the console" at the
          beginning of a line, the bell is rung.

     Changes/New Features in 5.2.5:
        * ESS[R]: `C-c C-q' or `Quit S' from the menu now should work
          (again and less klunkily) and do not append `-exited' to the
          buffer name.  Further, the behavior of `(ess-cleanup)',
          called from ess-quit, now depends on the new customizable
          variable `ess-S-quit-kill-buffers-p' which defaults to `nil'.
          Consequently, the question _"Delete all buffers associated
          with ..?"_ will not be asked anymore by default.

        * ESS[SAS] - ess-ebcdic-to-ascii-search-and-replace will now
          work with the `recode' application as well which is available
          on many platforms

        * ESS[S] (incl. R): Name completion for slots of S4 objects now
          works!

     Changes/New Features in 5.2.4:
        * The documentation now includes an overview of how to use the
          emacs TAGS facility for S functions.  (The distribution also
          used to contain a directory `etc/other/Tags' where a ~1990
          version of `etags.c' was distributed; this is no longer
          relevant and so has been deleted.)

        * ESS[SAS] - When you are working with EBCDIC files on an ASCII
          platform, .log NOTEs may display as gibberish since the EBCDIC
          characters are not converted to ASCII prior to their display.
          So, the function ess-ebcdic-to-ascii-search-and-replace is
          provided for convenience and is bound to `C-F11'.  This
          function requires the `dd' command (only available on unix or
          unix-like platforms).

        * ESS: Completion of object names is now always done
          dynamically rather than allowing the option of using a
          pre-computed database (by `ess-create-object-name-db') since
          modern computers seem fast enough for dynamic completion.
          (We expect few users, if any, have been using the
          pre-computed database method.)

        * ESS: object completion in iESS buffers running on Windows was
          very slow (for GNU Emacs, but not XEmacs) and has now been
          fixed.  Further, it was more or less broken for all versions
          of S-plus 6.x, and has been fixed to work everywhere but with
          the Windows' GUI of S-plus.  The list of objects now shows
          unique names also when an object appears more than once in
          the search path.

        * ESS[R]: Completion of object names now also includes those
          starting with ".".

     Changes/New Features in 5.2.3:
        * ESS: When new inferior ESS processes are created, by default
          they will replace the current buffer (this restores behavior
          from pre 5.2.0). If you wish new ESS processes to start in
          another window of the current frame, set
          inferior-ess-same-window to nil.

        * New variables inferior-Splus-args and inferior-R-args provide
          a way to pass command line arguments to starting S and R
          processes.

     Changes/New Features in 5.2.2:
        * bug-fixes for 5.2.1 (require 'executable), html docs, etc.

        * ess-lisp-directory/../doc/info added to Info-directory-list
          if ess-info not found by info

        * ESS[R]: If you have other versions of R on your exec-path,
          such as "R-1.8.1" with Unix or "rw1081" with Windows, ESS
          will find them and create appropriate functions, such as `M-x
          R-1.8.1' or `M-x rw1081', for calling them.  By default only
          Unix programs beginning "R-1" and "R-2" and Windows programs
          parallel to the version of R in your exec-path will be found,
          but see ess-r-versions and ess-rterm-versions for ways to
          find other versions of R.

        * ESS[R]: Other versions of R, such as "R-1.8.1" on Unix and
          "rw1081" on Windows, are added to the "ESS / Start Process /
          Other" menu.

        * ESS[S]: If you have other versions of S-Plus on your Windows
          computer, such as S-Plus 6.1 or S-Plus 4.5, ESS will find
          them and create appropriate functions, such as `M-x splus61',
          for calling the console version (Sqpe) inside an emacs
          buffer.  By default only programs installed in the default
          location will be found, but see ess-SHOME-versions for ways
          to find other versions of S-Plus.

        * ESS[S]: Other versions of Sqpe on Windows, such as "splus61",
          are added to the "ESS / Start Process / Other" menu.

        * ESS[R]: (bug fix) ess-quit (bound to `C-c C-q') should now
          quit the inferior R process, when issued from either the
          inferior buffer, or from a .R buffer.

     Changes/New Features in 5.2.1:
        * ESS[S] (R and S-plus): now have toolbar support with icons to
          evaluate code in the inferior process or to switch there.
          This code is experimental and likely to change as XEmacs/Emacs
          issues get resolved. The toolbar should be enabled if your
          Emacs displays images, but can be disabled with the variable
          ess-use-toolbar.  Thanks to David Smith from Insightful for
          the S-plus logo.

        * ESS[SAS]: ess-sas-graph-view (`F12') enhanced; you can specify
          external file viewers for each graphics file type via the
          alist ess-sas-graph-view-viewer-alist; also .jpg/.gif are now
          handled by image-mode on XEmacs, if available, otherwise by
          graphics primitives as before

     Changes/New Features in 5.2.0:
        * ESS[BUGS]:  new info documentation!  now supports interactive
          processing thanks to Aki Vehtari (mailto:Aki.Vehtari@hut.fi);
          new architecture-independent unix support as well as support
          for BUGS v. 0.5

        * ESS[SAS]:  convert .log to .sas with ess-sas-transcript; info
          documentation improved; Local Variable bug fixes; SAS/IML
          statements/functions now highlighted; files edited remotely
          by ange-ftp/EFS/tramp are recognized and pressing SUBMIT
          opens a buffer on the remote host via the local variable
          ess-sas-shell-buffer-remote-init which defaults to "ssh";
          changed the definition of the variable
          ess-sas-edit-keys-toggle to boolean rather than 0/1; added
          the function ess-electric-run-semicolon which automatically
          reverse indents lines containing only "run;"; `C-F1' creates
          MS RTF portrait from the current buffer; `C-F2' creates MS
          RTF landscape from the current buffer; `C-F9' opens a SAS
          DATASET with PROC INSIGHT rather than PROC FSVIEW; "inferior"
          aliases for SAS batch:  `C-c C-r' for submit region, `C-c
          C-b' for submit buffer, `C-c C-x' for goto .log; `C-c C-y'
          for goto .lst

        * ESS[S]: Pressing underscore ("_") once inserts " <- " (as
          before); pressing underscore twice inserts a literal
          underscore.  To stop this smart behaviour, add
          "(ess-toggle-underscore nil)" to your .emacs after ess-site
          has been loaded; ess-dump-filename-template-proto (new name!)
          now can be customized successfully (for S language dialects);
          Support for Imenu has been improved; set ess-imenu-use-S to
          non-nil to get an "Imenu-S" item on your menubar; ess-help:
          Now using nice underlines (instead of `nuke-* ^H_')

        * ESS[R]:  After (require 'essa-r), `M-x ess-r-var' allows to
          load numbers from any Emacs buffer into an existing *R*
          process; `M-x ess-rdired' gives a "directory editor" of R
          objects; fixed ess-retr-lastvalue-command, i.e. .Last.value
          bug (thanks to David Brahm)

        * ESS: Support for creating new window frames has been added to
          ESS.  Inferior ESS processes can be created in dedicated
          frames by setting inferior-ess-own-frame to t.  ESS help
          buffers can also open in new frames; see the documentation
          for ess-help-own-frame for details.  (Thanks to Kevin Rodgers
          for contributing code.)

     Changes/New Features in 5.1.24:
        * The version number is now correct even inside ESS/Emacs

     Changes/New Features in 5.1.23:
        * Minor more Makefile clean up.

     Changes/New Features in 5.1.22:
        * Besides info documentation, PDF and HTML documentation are
          also provided (instead of built using "make") and available
          on the web as well; see ESS web page
          (http://ess.r-project.org/) and StatLib
          (http://lib.stat.cmu.edu/general/ESS/doc)

        * Now that info documentation is available, the README.* files
          are no longer supported.  However, they are still distributed
          for what it's worth.

        * ESS is now an XEmacs package!  See XEmacs Installation HOWTO
          (http://www.xemacs.org/Install/index.html) for details
          (specifically, items 10-15).

        * ESS[SAS]: more user-friendly enhancements for remote SAS
          batch jobs with Kermit file transfers (LOG and OUTPUT
          function key features now supported).  Multiple shells now
          supported so you can run SAS on different computers from
          different buffers by setting the buffer-local variable
          ess-sas-shell-buffer to unique buffer names.

        * Major re-vamping of Makefile/Makeconf.

     Changes/New Features in 5.1.21:
        * ESS[SAS]: info documentation now available!, see ESS->Help
          for SAS; `F12' opens GSASFILE nearest point for viewing
          either within emacs, when available, or via an external
          viewer; more syntax highlighting keywords; more enhancements
          for remote SAS batch jobs with Kermit; new framework for
          remote SAS interactive jobs, see ess-remote

        * ESS[S]: info documentation now available!, see ESS->Help for
          the S family

        * Makefile: tag now independent of rel; info files made by
          doc/Makefile and installed in new info sub-directory

     Changes/New Features in 5.1.20:
        * New `options()$STERM' in the S dialects (S, S-Plus, R).  The
          S program can determine the environment in which it is
          currently running.  ESS sets the option to `iESS' or `ddeESS'
          when it starts an S language process.  We recommend other
          specific values for S language processes that ESS does not
          start.

        * New `ess-mouse-me' function, assigned to S-mouse-3 by default.
          User may click on a word or region and then choose from the
          menu to display the item, or a summary, or a plot, etc.  This
          feature is still under development.

        * GNU Emacs 21.1 is now supported (fixed for S dialects, SAS &
          BUGS), (some from Stephen Eglen).

        * XEmacs 21.x is now supported (fixed w32-using-nt bug)

        * XEmacs on Win (NT) is better supported.

        * Workaround for bug in Sqpe+6 (S-PLUS 6 for Win).

        * should now work even when imenu is not available (for old
          XEmacsen).

        * ESS[SAS]: XEmacs-Imenu fix; `C-TAB' is globalized along with
          your function-key definitions, if specified; you can specify
          your SAS library definitions outside of autoexec.sas for
          ess-sas-data-view with SAS code placed in the variable
          ess-sas-data-view-libname, also the dataset name is defaulted
          to the nearest permanent dataset to point; Speedbar support
          now works for permanent datasets, please ignore first./last.;
          new font-locking is now the default with more improvements
          for font-locking PROCs, macro statements, * ; and %* ;
          comments; you can toggle sas-log-mode with `F10' which will
          font-lock your .log (if it isn't too big); submit remote .sas
          files accessed with ange-ftp, EFS or Tramp (Kermit is
          experimental) by setting ess-sas-submit-method to 'sh;
          ess-sas-submit-command and ess-sas-submit-command-options are
          buffer-local so you can have local file variable sections at
          the end of your .sas files to request different executables
          or specify special options and the local file variables are
          re-read at submit instead of only at file open so that if you
          make a change it is picked up immediately;

        * ESS[BUGS]: font-lock with `in' fixed.

        * for STATA: font-lock bug fixed.

        * for Rd mode: `C-c C-v' and `switch-process' in menu.
          further, `C-c C-f' prefix (Rd-font) for inserting or
          surrounding a word by things such as \code{.},
          \code{\link{.}}, \emph{.} etc.

        * new functions (ess-directory-function) and
          (ess-narrow-to-defun) ess-directory <-> default-directory
          logic (Jeff Mincy).

        * Re-organized Makefile and fixed a few bugs.

     Changes/New Features in 5.1.19:
        * S+6 now supported (Tony Rossini (Unix) and Rich Heiberger
          (Windows))

        * New BUGS support through ESS[BUGS] mode (Rodney Sparapani)
          Templates assist you in writing .bug and .cmd code (.cmd and
          .log are replaced by .bmd and .bog to avoid emacs extension
          collisions).  Substitution" parameters facilitate "automagic"
          generation of data...in" and "init...in" filenames, "const
          N=" from your data file and "monitor()/stats()" commands.
          Activated by pressing `F12'.

        * Fixes for `ess-smart-underscore' SAS breakage (Rich Heiberger)

        * You can change between PC and Unix, local and global SAS
          function-key definitions interactively (Rich Heiberger)

        * `C-Submit' a highlighted region to SAS batch (Rodney
          Sparapani)

        * New and improved SAS syntax highlighting (Rodney Sparapani)
          To get the new functionality, set ess-sas-run-make-regexp to
          nil.  Also available in .log files via `F10'.

        * Open a permanent SAS dataset for viewing via `F9' (Rodney
          Sparapani) You must have the library defined in autoexec.sas
          for it to work.

        * User-friendly defaults for `sas-program',
          `ess-sas-batch-pre-command' and `ess-sas-batch-post-command'
          as well Customize support for these and other ESS[SAS]
          variables (Rodney Sparapani)

        * `ess-sas-suffix-2' now defaults to .dat via `F11' (Rodney
          Sparapani)

        * Emacs/XEmacs, Unix/Windows issues collectively handled in
          ess-emcs.el

        * defadvice solves problem of missing *ESS* (thanks to Jeff
          Mincy)

        * Improved manual a bit by including things that were only in
          `README'.

     Changes/New Features in 5.1.18:
        * New `ess-smart-underscore' function, now assigned to "_" by
          default.  Inserts `ess-S-assign' (customizable " <- "),
          unless inside string and comments where plain "_" is used
          instead. (MM)

        * Fixes for longstanding interactive SAS breakage (RMH)

     Changes/New Features in 5.1.17:
        * Documentation for Windows Installation (Rich Heiberger)

        * removal of ess-vars, finalization of customize support (in the
          sense that there is no more use of ess-vars, but that we need
          to fix ess-cust) (AJ Rossini)

        * Many small (and large) fixes/contributions (MMaechler)

        * addition of the "S-equal" variable and provide `M-x
          ess-add-MM-keys' a way to remap "_" to `ess-S-assign',
          typically " <- ", but customizable. (MMaechler)

     Changes/New Features in 5.1.16:
        * BUG FIXES

        * Better SAS support

     Changes/New Features in 5.1.15:
        * BUG FIXES

     Changes/New Features in 5.1.14:
        * Yet more fixes to SAS mode, (Rich Heiberger and Rodney
          Sparapani)

        * Customize support (for most Emacsen which support it)
          (AJRossini)

        * ARC and ViSta support out of the box, and fixes for XLispStat
          (AJRossini)

     Changes/New Features in 5.1.13:
        * Version numbering finally all depending on the ./VERSION file,
          thanks to Martin Maechler.

        * Yet more fixes to SAS mode, thanks to Rich Heiberger.

     Changes/New Features in 5.1.12:
        * Splus 5.1 stabilized, thanks to Martin Maechler, Bill
          Venables, Chuck Taylor, and others.

        * More fixes to SAS mode, thanks to Rodney Sparapani and Rich
          Heiberger.

     Changes/New Features in 5.1.11:
        * More fixes to Stata mode, thanks to Brendan Halpin
          (mailto:brendan@essex.ac.uk).

        * fixed bugs in ESS-elsewhere, thanks to many testers

        * README.SPLUS4WIN has DETAILED instructions for S-PLUS 2000,
          thanks to David Brahm (mailto:brahm@alum.mit.edu).

        * Fixes to SAS mode, thanks to Rodney Sparapani

     Changes/New Features in 5.1.10:
        * More fixes to Stata mode

        * primitive generic version of ESS-elsewhere

        * Small fixes to SAS/Stata.

     Changes/New Features in 5.1.9:
        * Stata mode works

        * Literate Data Analysis using Noweb works

     Changes/New Features in 5.1.8:
        * Bug fixes

        * R documentation mode defaults changed

     Changes/New Features in 5.1.2:
        * able to use inferior iESS mode to communicate directly with a
          running S-Plus 4.x process using the Microsoft DDE protocol.
          We use the familiar (from Unix ESS) `C-c C-n' and related key
          sequences to send lines from the S-mode file to the inferior
          S process.  We continue to edit S input files in ESS[S] mode
          and transcripts of previous S sessions in ESS Transcript
          mode.  All three modes know the S language, syntax, and
          indentation patterns and provide the syntactic highlighting
          that eases the programming tasks.



File: ess.info,  Node: Credits,  Next: Latest version,  Prev: New features,  Up: Introduction

Authors of and contributors to ESS
==================================

   The ESS environment is built on the open-source projects of many
contributors, dating back to 1989 where Doug Bates and Ed Kademan wrote
S-mode to edit S and Splus files in GNU Emacs.  Frank Ritter and Mike
Meyer added features, creating version 2.  Meyer and David Smith made
further contributions, creating version 3.  For version 4, David Smith
provided significant enhancements to allow for powerful process
interaction.

   John Sall wrote GNU Emacs macros for SAS source code around 1990.
Tom Cook added functions to submit jobs, review listing and log files,
and produce basic views of a dataset, thus creating a SAS-mode which was
distributed in 1994.

   In 1994, A.J. Rossini extended S-mode to support XEmacs.  Together
with extensions written by Martin Maechler, this became version 4.7 and
supported S, Splus, and R.  In 1995, Rossini extended SAS-mode to work
with XEmacs.

   In 1997, Rossini merged S-mode and SAS-mode into a single Emacs
package for statistical programming; the product of this marriage was
called ESS version 5.  Richard M. Heiberger designed the inferior mode
for interactive SAS and SAS-mode was further integrated into ESS.
Thomas Lumley's Stata mode, written around 1996, was also folded into
ESS.  More changes were made to support additional statistical
languages, particularly XLispStat.

   ESS initially worked only with Unix statistics packages that used
standard-input and standard-output for both the command-line interface
and batch processing.  ESS could not communicate with statistical
packages that did not use this protocol.  This changed in 1998 when
Brian Ripley demonstrated use of the Windows Dynamic Data Exchange
(DDE) protocol with ESS.  Heiberger then used DDE to provide
interactive interfaces for Windows versions of Splus.  In 1999, Rodney
A. Sparapani and Heiberger implemented SAS batch for ESS relying on
files, rather than standard-input/standard-output, for Unix, Windows
and Mac.  In 2001, Sparapani added BUGS batch file processing to ESS
for Unix and Windows.

   * The multiple process code, and the idea for
     `ess-eval-line-and-next-line' are by Rod Ball.

   * Thanks to Doug Bates for many useful suggestions.

   * Thanks to Martin Maechler for reporting and fixing bugs, providing
     many useful comments and suggestions, and for maintaining the ESS
     mailing lists.

   * Thanks to Frank Ritter for updates, particularly the menu code, and
     invaluable comments on the manual.

   * Thanks to Ken'ichi Shibayama for his excellent indenting code, and
     many comments and suggestions.

   * Thanks to Aki Vehtari for adding interactive BUGS support.

   * Thanks to Brendan Halpin for bug-fixes and updates to Stata-mode.

   * Last, but definitely not least, thanks to the many ESS users and
     contributors to the ESS mailing lists.

   _ESS_ version 5 is being developed and currently maintained by

   * A.J. Rossini (mailto:blindglobe@gmail.com)

   * Richard M. Heiberger (mailto:rmh@temple.edu)

   * Kurt Hornik (mailto:Kurt.Hornik@R-project.org)

   * Martin Maechler (mailto:maechler@stat.math.ethz.ch)

   * Rodney A. Sparapani (mailto:rsparapa@mcw.edu)

   * Stephen Eglen (mailto:stephen@gnu.org)


File: ess.info,  Node: Latest version,  Next: Manual,  Prev: Credits,  Up: Introduction

Getting the latest version of ESS
=================================

   The latest released version of ESS is always available on the web at:
ESS web page (http://ess.r-project.org) or StatLib
(http://lib.stat.cmu.edu/general/ESS/)

   The latest development version of ESS is available via
`https://svn.R-project.org/ESS/', the ESS Subversion repository.  If
you have a Subversion client (see `http://subversion.tigris.org/'), you
can download the sources using:
     % svn checkout https://svn.r-project.org/ESS/trunk PATH

which will put the ESS files into directory PATH.  Later, within that
directory, `svn update' will bring that directory up to date.
Windows-based tools such as TortoiseSVN are also available for
downloading the files.  Alternatively, you can browse the sources with a
web browser at: ESS SVN site (https://svn.r-project.org/ESS/trunk).
However, please use a subversion client instead to minimize the load
when retrieving.

   If you remove other versions of ESS from your emacs load-path, you
can then use the development version by adding the following to .emacs:

     (load "/path/to/ess-svn/lisp/ess-site.el")

   Note that https is required, and that the SSL certificate for the
Subversion server of the R project is

     Certificate information:
      - Hostname: svn.r-project.org
      - Valid: from Jul 16 08:10:01 2004 GMT until Jul 14 08:10:01 2014 GMT
      - Issuer: Department of Mathematics, ETH Zurich, Zurich, Switzerland, CH
      - Fingerprint: c9:5d:eb:f9:f2:56:d1:04:ba:44:61:f8:64:6b:d9:33:3f:93:6e:ad

(currently, there is no "trusted certificate").  You can accept this
certificate permanently and will not be asked about it anymore.

